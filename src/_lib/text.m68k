; ---------------------------------------------------------------------------
; Mega Drive Framework
; By Devon 2022
; ---------------------------------------------------------------------------
; Text functions
; ---------------------------------------------------------------------------

; ---------------------------------------------------------------------------
; Load the debug font into VRAM
; VDP command should be set beforehand
; ---------------------------------------------------------------------------
; PARAMETERS:
;	d0.b - Palette entry for set pixels
; ---------------------------------------------------------------------------

LoadDebugFont:
	lea	.DebugFont(pc),a0			; Load font
	move.w	#.DebugFontEnd-.DebugFont-1,d1
	bra.w	Decode1BPPToVRAM

; ---------------------------------------------------------------------------

.DebugFont:
	dc.b	$00, $00, $00, $00, $00, $00, $00, $00, $30, $78, $78, $78
	dc.b	$30, $00, $30, $00, $50, $50, $00, $00, $00, $00, $00, $00
	dc.b	$44, $FE, $44, $44, $44, $FE, $44, $00, $28, $7E, $A8, $7C
	dc.b	$2A, $FC, $28, $00, $C6, $CC, $18, $30, $60, $C6, $86, $00
	dc.b	$30, $48, $28, $70, $CA, $C4, $7A, $00, $40, $40, $00, $00
	dc.b	$00, $00, $00, $00, $06, $0C, $0C, $0C, $0C, $0C, $06, $00
	dc.b	$C0, $60, $60, $60, $60, $60, $C0, $00, $00, $54, $38, $7C
	dc.b	$38, $54, $00, $00, $00, $18, $18, $7E, $7E, $18, $18, $00
	dc.b	$00, $00, $00, $00, $00, $C0, $C0, $40, $00, $00, $00, $7E
	dc.b	$7E, $00, $00, $00, $00, $00, $00, $00, $00, $C0, $C0, $00
	dc.b	$06, $0C, $18, $30, $60, $C0, $80, $00, $7C, $C6, $CE, $DA
	dc.b	$F2, $E6, $7C, $00, $18, $38, $18, $18, $18, $18, $7E, $00
	dc.b	$7C, $C6, $06, $1C, $78, $E0, $FE, $00, $7C, $C6, $06, $3C
	dc.b	$06, $C6, $7C, $00, $C6, $C6, $C6, $C6, $FE, $06, $06, $00
	dc.b	$FE, $C0, $FC, $06, $06, $C6, $7C, $00, $7C, $C6, $C0, $FC
	dc.b	$C6, $C6, $7C, $00, $FE, $06, $0C, $18, $30, $30, $30, $00
	dc.b	$7C, $C6, $C6, $7C, $C6, $C6, $7C, $00, $7C, $C6, $C6, $7E
	dc.b	$06, $C6, $7C, $00, $00, $60, $60, $00, $00, $60, $60, $00
	dc.b	$00, $60, $60, $00, $60, $60, $20, $00, $0C, $18, $30, $60
	dc.b	$30, $18, $0C, $00, $00, $7E, $7E, $00, $00, $7E, $7E, $00
	dc.b	$30, $18, $0C, $06, $0C, $18, $30, $00, $7C, $C6, $06, $1C
	dc.b	$30, $00, $30, $00, $7C, $C2, $9A, $AA, $BC, $C0, $7C, $00
	dc.b	$7C, $C6, $C6, $FE, $C6, $C6, $C6, $00, $FC, $C6, $C6, $FC
	dc.b	$C6, $C6, $FC, $00, $7C, $C6, $C0, $C0, $C0, $C6, $7C, $00
	dc.b	$FC, $C6, $C6, $C6, $C6, $C6, $FC, $00, $FE, $C0, $C0, $FC
	dc.b	$C0, $C0, $FE, $00, $FE, $C0, $C0, $FC, $C0, $C0, $C0, $00
	dc.b	$7C, $C6, $C0, $DE, $C6, $C6, $7C, $00, $C6, $C6, $C6, $FE
	dc.b	$C6, $C6, $C6, $00, $7E, $18, $18, $18, $18, $18, $7E, $00
	dc.b	$06, $06, $06, $06, $06, $C6, $7C, $00, $C6, $C6, $CC, $F8
	dc.b	$CC, $C6, $C6, $00, $C0, $C0, $C0, $C0, $C0, $C0, $FE, $00
	dc.b	$82, $C6, $EE, $FE, $D6, $C6, $C6, $00, $C6, $E6, $F6, $FE
	dc.b	$DE, $CE, $C6, $00, $7C, $C6, $C6, $C6, $C6, $C6, $7C, $00
	dc.b	$FC, $C6, $C6, $FC, $C0, $C0, $C0, $00, $7C, $C6, $C6, $C6
	dc.b	$D6, $CC, $7A, $00, $FC, $C6, $C6, $FC, $C6, $C6, $C6, $00
	dc.b	$7C, $C6, $C0, $7C, $06, $C6, $7C, $00, $7E, $18, $18, $18
	dc.b	$18, $18, $18, $00, $C6, $C6, $C6, $C6, $C6, $C6, $7C, $00
	dc.b	$C6, $C6, $6C, $6C, $38, $38, $10, $00, $C6, $C6, $C6, $D6
	dc.b	$FE, $EE, $C6, $00, $C6, $EE, $7C, $38, $7C, $EE, $C6, $00
	dc.b	$C6, $C6, $C6, $7E, $06, $C6, $7C, $00, $FE, $0E, $1C, $38
	dc.b	$70, $E0, $FE, $00, $0E, $0C, $0C, $0C, $0C, $0C, $0E, $00
	dc.b	$C0, $60, $30, $18, $0C, $06, $02, $00, $E0, $60, $60, $60
	dc.b	$60, $60, $E0, $00, $20, $70, $D8, $88, $00, $00, $00, $00
	dc.b	$00, $00, $00, $00, $00, $00, $FE, $00, $30, $18, $08, $00
	dc.b	$00, $00, $00, $00, $00, $00, $7C, $06, $7E, $C6, $7A, $00
	dc.b	$C0, $C0, $FC, $C6, $C6, $C6, $FC, $00, $00, $00, $7E, $C0
	dc.b	$C0, $C0, $7E, $00, $06, $06, $7E, $C6, $C6, $C6, $7E, $00
	dc.b	$00, $00, $7C, $C6, $FE, $C0, $7E, $00, $1C, $30, $30, $7C
	dc.b	$30, $30, $30, $00, $00, $00, $7E, $C6, $7E, $06, $FC, $00
	dc.b	$C0, $C0, $FC, $C6, $C6, $C6, $C6, $00, $00, $18, $00, $18
	dc.b	$18, $18, $18, $00, $00, $06, $00, $06, $06, $C6, $7C, $00
	dc.b	$60, $66, $6C, $78, $7C, $66, $66, $00, $18, $18, $18, $18
	dc.b	$18, $18, $18, $00, $00, $00, $C6, $EE, $FE, $D6, $C6, $00
	dc.b	$00, $00, $FC, $C6, $C6, $C6, $C6, $00, $00, $00, $7C, $C6
	dc.b	$C6, $C6, $7C, $00, $00, $00, $FC, $C6, $C6, $FC, $C0, $C0
	dc.b	$00, $00, $7E, $C6, $C6, $7E, $06, $06, $00, $00, $DC, $E6
	dc.b	$C0, $C0, $C0, $00, $00, $00, $7E, $C0, $7C, $06, $FC, $00
	dc.b	$00, $30, $7C, $30, $30, $34, $18, $00, $00, $00, $C6, $C6
	dc.b	$C6, $C6, $7C, $00, $00, $00, $C6, $C6, $6C, $38, $10, $00
	dc.b	$00, $00, $C6, $D6, $FE, $EE, $C6, $00, $00, $00, $C6, $6C
	dc.b	$38, $6C, $C6, $00, $00, $00, $C6, $C6, $7E, $06, $FC, $00
	dc.b	$00, $00, $FE, $1C, $38, $70, $FE, $00, $06, $0C, $0C, $18
	dc.b	$0C, $0C, $06, $00, $18, $18, $18, $18, $18, $18, $18, $00
	dc.b	$C0, $60, $60, $30, $60, $60, $C0, $00, $00, $00, $72, $DA
	dc.b	$8C, $00, $00, $00
.DebugFontEnd:

; ---------------------------------------------------------------------------
; Draw text
; ---------------------------------------------------------------------------
; PARAMETERS:
;	a0.l - Pointer to text data
;	d0.l - VDP command
;	d1.w - Base tile ID
; ---------------------------------------------------------------------------

DrawText:
.LineLoop:
	move.l	d0,VDPCTRL				; Set VDP command

.CharLoop:
	moveq	#0,d2					; Get character
	move.b	(a0)+,d2
	beq.s	.End					; If it's the termination character, branch
	bmi.s	.NewLine				; If it's the newline character, branch

	add.w	d1,d2					; Draw character
	move.w	d2,VDPDATA

	bra.s	.CharLoop				; Next character

.NewLine:
	addi.l	#$800000,d0				; Next line
	bra.s	.LineLoop

.End:
	rts

; ---------------------------------------------------------------------------
